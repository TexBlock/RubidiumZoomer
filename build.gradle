plugins {
    id "dev.architectury.loom" version "1.0-SNAPSHOT"
    id "maven-publish"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    silentMojangMappingsLicense()

    forge {
        mixinConfigs = [
                "examplemod.mixins.json"
        ]
        dataGen {
            mod project.mod_id
        }
    }
}

repositories {
    maven {
        // Location of the maven for mixed mappings, Registrate, and Flywheel
        name = "tterrag maven"
        url = "https://maven.tterrag.com/"
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven { url "https://aperlambda.github.io/maven" }
    maven { url 'https://maven.parchmentmc.org' }
}

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    //mappings loom.layered() {
    //    officialMojangMappings()
    //    parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_version}@zip")
    //}
    //mappings loom.officialMojangMappings()
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.forge_version}"

    modImplementation "maven.modrinth:rubidium:${rubidium_version}"

    compileOnly 'org.aperlambda:lambdajcommon:1.8.1'
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"

    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        options.release = targetVersion
    }
}

java {
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
